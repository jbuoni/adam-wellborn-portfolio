{"version":3,"sources":["images/lbf1.png","images/lbf2.png","images/angular1.png","images/angular2.png","images/mosaic1.png","images/mosaic2.png","images/exp1.png","images/bbpplot.png","components/header/Header.tsx","components/card/Card.tsx","card-data/card-data.ts","components/card-container/CardContainer.tsx","components/about-overlay/AboutOverlay.tsx","components/card-overlay/CardOverlay.tsx","components/overlay/Overlay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","aboutClick","className","onClick","window","open","focus","Card","cardProps","state","hovering","cardData","this","props","cardHoverImage","cardImage","name","id","style","backgroundImage","onCardClick","onMouseEnter","onHover","onMouseLeave","setState","React","Component","lbMain","lbHover","aMain","aHover","mlMain","mlHover","mMain","mHover","CardContainer","map","data","AboutOverlay","CardOverlay","Fade","require","OverlayInnerComponent","Overlay","exitClick","childComponentData","title","right","App","p","isOverlayOpen","exitOverlay","onOverlayClick","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b26ad625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lbf1.cea9c61d.png\";","module.exports = __webpack_public_path__ + \"static/media/lbf2.6d571fc4.png\";","module.exports = __webpack_public_path__ + \"static/media/angular1.10bb1a2f.png\";","module.exports = __webpack_public_path__ + \"static/media/angular2.262e32a2.png\";","module.exports = __webpack_public_path__ + \"static/media/mosaic1.90b9a430.png\";","module.exports = __webpack_public_path__ + \"static/media/mosaic2.bad22a93.png\";","module.exports = __webpack_public_path__ + \"static/media/exp1.dc2b5e04.png\";","module.exports = __webpack_public_path__ + \"static/media/bbpplot.5dac4f07.png\";","import React from 'react';\nimport './Header.css';\n\ntype HeaderProps = {\n  aboutClick: Function\n};\n\nfunction Header({ aboutClick }: HeaderProps) {\n  return (\n    <div className=\"header\">\n      <div className=\"adam-wellborn\">Adam Wellborn</div>\n      <div className=\"header-right\">\n        <div className=\"header-link\" onClick={() => aboutClick()}>About</div>\n        <div className=\"header-link\" onClick={() => onInstagramClick()}>Instagram</div>\n        <div className=\"header-link\">Linked In</div>\n      </div>\n    </div>\n  );\n}\n\nfunction onInstagramClick(): void {\n  const win: any = window.open('https://www.instagram.com/adamwellborn/', '_blank');\n  win.focus();\n}\n\nexport default Header;\n","import React from 'react';\nimport './Card.css';\nimport ICard from '../../card-data/icard';\n\ntype CardState = {\n  hovering: boolean;\n}\n\ntype CardProps = {\n  onCardClick: Function,\n  cardData: ICard\n};\nclass Card extends React.Component<CardProps, CardState>{\n\n  constructor(cardProps: CardProps) {\n    super(cardProps);\n    this.state = {\n      hovering: false\n    };\n  }\n\n  render() {\n    const { cardData } = this.props;\n\n    const {\n      cardHoverImage,\n      cardImage,\n      id,\n      name\n    } = cardData;\n\n    const style:any = {\n      // background: `${\n      //   this.state.hovering ?\n      //   `linear-gradient(\n      //     rgba(0, 0, 0, 0.5),\n      //     rgba(0, 0, 0, 0.5)\n      //   ),` : ''\n      //   }\n      //   url(${this.state.hovering ? cardHoverImage : cardImage})\n      // `\n      backgroundImage: `url(${this.state.hovering ? cardHoverImage : cardImage})`\n    }\n\n    return (\n      <div\n        className=\"card\" style={style}\n        onClick={() => this.onCardClick()}\n        onMouseEnter={() => this.onHover(true)}\n        onMouseLeave={() => this.onHover(false)}\n      >\n        {\n          this.state.hovering &&\n          <div className=\"card-name\">{name}</div>\n        }\n\n      </div>\n    );\n  }\n\n  private onHover(hovering: boolean) {\n    this.setState({ hovering });\n  }\n\n  private onCardClick() {\n    const { cardData, onCardClick } = this.props;\n    onCardClick(cardData);\n  }\n}\n\nexport default Card;\n","import ICard from \"./icard\";\n\n// Images\nimport lbMain from '../images/lbf1.png';\nimport lbHover from '../images/lbf2.png';\nimport aMain from '../images/angular1.png';\nimport aHover from '../images/angular2.png';\nimport mlMain from '../images/mosaic1.png';\nimport mlHover from '../images/mosaic2.png';\nimport mMain from '../images/exp1.png';\nimport mHover from '../images/bbpplot.png';\n\nconst cardData: ICard[] = [\n  {\n    id: 'lbf',\n    name: 'Farm',\n    cardImage: lbMain,\n    cardHoverImage: lbHover\n  },\n  {\n    id: 'angular',\n    name: 'Angular',\n    cardImage: aMain,\n    cardHoverImage: aHover\n  },\n  {\n    id: 'ml',\n    name: 'Strategy Learner',\n    cardImage: mlMain,\n    cardHoverImage: mlHover\n  },\n  {\n    id: 'moasic',\n    name: 'Mosaic Python',\n    cardImage: mMain,\n    cardHoverImage: mHover\n  },\n  {\n    id: 'lbf',\n    name: 'Farm',\n    cardImage: lbMain,\n    cardHoverImage: lbHover\n  },\n  {\n    id: 'angular',\n    name: 'Angular',\n    cardImage: aMain,\n    cardHoverImage: aHover\n  }\n]\n\nexport default cardData;","import React from 'react';\nimport './CardContainer.css';\n\nimport { Card } from '../card';\n\n//TODO Temp\nimport cardData from '../../card-data/card-data';\nimport ICard from '../../card-data/icard';\n\ntype CardContainerProps = {\n  onCardClick: Function\n};\n\nfunction CardContainer({ onCardClick }: CardContainerProps) {\n  return (\n    <div className=\"card-container\">\n      { cardData.map((data: ICard) => <Card onCardClick={onCardClick} cardData={data} />)}\n    </div>\n  );\n}\n\nexport default CardContainer;\n","import React from 'react';\nimport './AboutOverlay.css';\n\nfunction AboutOverlay() {\n  return (\n    <div className=\"about-container\">\n      <h1>Hi I am Adam</h1>\n      <div>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur blandit faucibus mollis. Praesent ultrices vehicula hendrerit. Maecenas ut ante ut magna viverra consequat. Sed pretium viverra quam non blandit. Nullam bibendum odio non posuere venenatis. Aliquam a quam non velit pharetra convallis. Duis lorem libero, vehicula fermentum elementum vel, finibus at purus. Curabitur feugiat felis a dolor ultricies interdum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras sit amet sem interdum, lacinia nulla ac, tincidunt odio.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur blandit faucibus mollis. Praesent ultrices vehicula hendrerit. Maecenas ut ante ut magna viverra consequat. Sed pretium viverra quam non blandit. Nullam bibendum odio non posuere venenatis. Aliquam a quam non velit pharetra convallis. Duis lorem libero, vehicula fermentum elementum vel, finibus at purus. Curabitur feugiat felis a dolor ultricies interdum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras sit amet sem interdum, lacinia nulla ac, tincidunt odio.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur blandit faucibus mollis. Praesent ultrices vehicula hendrerit. Maecenas ut ante ut magna viverra consequat. Sed pretium viverra quam non blandit. Nullam bibendum odio non posuere venenatis. Aliquam a quam non velit pharetra convallis. Duis lorem libero, vehicula fermentum elementum vel, finibus at purus. Curabitur feugiat felis a dolor ultricies interdum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras sit amet sem interdum, lacinia nulla ac, tincidunt odio.\n      </div>\n    </div>\n  );\n}\n\nexport default AboutOverlay;\n\n","import React from 'react';\nimport './CardOverlay.css';\n\nfunction CardOverlay() {\n  return (\n    <div className=\"card-container\">\n      <h1>I am A Card</h1>\n    </div>\n  );\n}\n\nexport default CardOverlay;\n\n","import React from 'react';\nimport './Overlay.css';\nimport { AboutOverlay } from '../about-overlay';\nimport ICard from '../../card-data/icard';\nimport { CardOverlay } from '../card-overlay';\nimport cardData from '../../card-data/card-data';\n\n//Not Typescript\nconst Fade = require('react-reveal/Fade');\n\ntype OverlayProps = {\n  exitClick: Function\n  childComponentData?: ICard\n};\n\ntype OverlayInnerComponentProps = {\n  cardData?: ICard\n};\n\nfunction Overlay({ exitClick, childComponentData }: OverlayProps) {\n  const title = childComponentData && childComponentData.name || 'About';\n  return (\n    <div className=\"overlay-container\">\n      <div className=\"overlay-opacity\"></div>\n      <Fade right>\n        <div className=\"overlay-content\">\n          <div className=\"top-component\">\n            <div className=\"overlay-title\">{title}</div>\n            <div onClick={() => exitClick()} className=\"exit-container\"><i className=\"fas fa-times exit-overlay\"></i></div>\n          </div>\n          < OverlayInnerComponent cardData={childComponentData} />\n        </div>\n      </Fade>\n    </div>\n  );\n}\n\nfunction OverlayInnerComponent({ cardData } : OverlayInnerComponentProps) {\n  return cardData && <CardOverlay /> || <AboutOverlay />\n}\n\nexport default Overlay;\n","import React from 'react';\nimport './App.css';\n\nimport { Header } from './components/header';\nimport { CardContainer } from './components/card-container';\nimport { Overlay } from './components/overlay';\nimport ICard from './card-data/icard';\n\ntype AppState = {\n  isOverlayOpen: boolean;\n  currentOverlay?: string;\n  childComponentData?: ICard;\n}\n\nclass App extends React.Component<{}, AppState> {\n\n  constructor(p: {}) {\n    super(p);\n    this.state = { isOverlayOpen: false }\n  }\n\n  private onOverlayClick(cardData?: ICard) {\n    this.setState({\n      isOverlayOpen: !this.state.isOverlayOpen,\n      childComponentData: cardData\n    });\n  }\n\n  private exitOverlay() {\n    this.setState({ isOverlayOpen: false });\n  }\n\n  render() {\n    const { childComponentData } = this.state;\n    return (\n      <>\n        {\n          this.state.isOverlayOpen &&\n          <Overlay exitClick={() => this.exitOverlay()} childComponentData={childComponentData} />\n        }\n        <div className=\"App\">\n        <Header aboutClick={(id: string) => this.onOverlayClick()}/>\n        <CardContainer onCardClick={ (cardData?: ICard) => this.onOverlayClick(cardData)} />\n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}